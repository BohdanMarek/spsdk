# This workflow will install Python dependencies, run tests and other codechecks on SPSDK project

name: Publish To PyPi

#on:
#  workflow_run:
#    workflows: ["Python Continous Integration"]
#    types:
#      - completed
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]


jobs:

  package:
    runs-on: ubuntu-latest

    # Required by attest-build-provenance-github.
    permissions:
      id-token: write
      attestations: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build and Check Package
        uses: hynek/build-and-inspect-python-package@v2.8.0
        with:
          attest-build-provenance-github: 'true'

      # - name: Set-up Python
        # uses: actions/setup-python@v4.3.0
        # with:
          # python-version: '3.12'

      # - name: Install dependencies
        # run: |
          # python -m pip install --upgrade pip
          # pip install setuptools wheel twine

      # - name: Build the package
        # run: |
          # python setup.py sdist bdist_wheel
 
#      - name: Upload to PyPI
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
#        run: twine upload dist/*

  # deploy:
    # if: github.repository == 'pytest-dev/pytest'
    # needs: [package]
    # runs-on: ubuntu-latest
    # environment: deploy
    # timeout-minutes: 30
    # permissions:
      # id-token: write
      # contents: write
    # steps:
    # - uses: actions/checkout@v4

    # - name: Download Package
      # uses: actions/download-artifact@v4
      # with:
        # name: Packages
        # path: dist

    # - name: Publish package to PyPI
      # uses: pypa/gh-action-pypi-publish@v1.9.0

    # - name: Push tag
      # run: |
        # git config user.name "pytest bot"
        # git config user.email "pytestbot@gmail.com"
        # git tag --annotate --message=v${{ github.event.inputs.version }} ${{ github.event.inputs.version }} ${{ github.sha }}
        # git push origin ${{ github.event.inputs.version }}