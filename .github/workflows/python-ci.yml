# This workflow will install Python dependencies, run tests and other codechecks on SPSDK project

name: Python Continous Integration

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  contents: read

jobs:
  codecheck:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ["3.13"]

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set-up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name:  Install OS Dependencies
        run:   |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update && sudo apt install -y libpcsclite-dev swig
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            brew install pcsc-lite swig
          fi
        shell: bash

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.30.x'

      - name:  Check cmake
        run:   |
          cmake --version

      - name: Check LongPathsEnabled
        run: |
         (Get-ItemProperty "HKLM:System\CurrentControlSet\Control\FileSystem").LongPathsEnabled

      - name: Set LongPathsEnabled
        run: |
         Set-ItemProperty HKLM:System\CurrentControlSet\Control\FileSystem LongPathsEnabled 1

      - name: Set  TEMP environment variable
        run:   |
          echo "TEMP=c:\Temp" >> $GITHUB_ENV
          echo "TMP=c:\Temp" >> $GITHUB_ENV

      - name: Install SPSDK
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade .[all]

      - name: Install Development Dependencies
        run: |
          pip install -r requirements-develop.txt
 
      - name: Run Codecheck
        run: |
          # Ignoring the 'COPYRIGHT' check as the year of merge to Github may differ from the actual year when the file was updated 
          codecheck -s --output reports_codecheck --info-check gitcov  --info-check COPYRIGHT

      - name: Archive Results
        uses: actions/upload-artifact@v3
        with:
          name: Results-${{ matrix.python-version }}-${{ matrix.os }}
          path: reports_codecheck
        if: always() && job.status == 'failure'
